
NEXT

redo mModel system
    make vectors pointers
    make dao return filtered mModels - remove foreach's in model.cpp's
    write getters in dao's for each needed retrieval
    have model getters return these^
    can mModel be sorted, or just the model itself
        getters will handle the sorting?
    can have seperate observations model in predictions if it reselects on new weather
        get new weather signal to predictions
            this may be simplified by using same model instead of two


logbook
    include maintenance on this tab
    include vehicle table fields also

tickets

    need to set defaults better
        left join may fix this
            may also require a delegate to say "not found"
        may not matter or...
        set each table init to write an Id=1 record
        supress Id=1 record in all tables
    and check for tickets when deleting a race or vehicle

    predictionId field
        write if available
        may also record 5 before and 5 after
        delete unused predictions with button after race

    check to see if dao.mTickets is getting updated with model.mTickets
    add weather fields to ticket dialog
    show mph split
    show more weather info
    have button/window to show weather from 30 minutes before to 5 after, dialogue?
        detailed run info dialogue
            include predictions

look into adding shortcut keys and QLabel::Buddy

predictions
    add filters for track/race
    add filters for good timers or checkbox with each timer that defaults to true
    add fields for all timers
        abstract out
    look into code-based DA calcs
    check that current weather is "current"

weather
    discard first throw-away read
        maybe first two?
    allow for hot plug of WS after start
    check for highly variable wind and discard as neccessary
    gust value looks to be highest single internal reading for the last minute
        not highest data sent, but highest of the smallest interval internally
    headwind is 0/360 degrees
    tailwind is 180 degrees
    use Qt Charts to show history
        see Mastering QT p.58

fix git ssh key issue

rename race to event?

add error reporting
    use QMessageBox
        make global stream-like object
        {
        QMessageBox messageBox;
        messageBox.setIconPixmap(QPixmap(":/icon.png"));
        messageBox.setText("Lorem ipsum.");
        messageBox.setWindowTitle("About");
        messageBox.exec();
        }
    smpt
    database operations
    weather station
        connection
        read
icons
    resource file
    mastering qt p. 124


trash collection
    smtp sockets
    database checks
    valgrind on linux
